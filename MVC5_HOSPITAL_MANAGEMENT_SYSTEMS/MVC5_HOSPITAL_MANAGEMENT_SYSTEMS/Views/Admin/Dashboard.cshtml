@model MVC5_HOSPITAL_MANAGEMENT_SYSTEMS.Models.VmModels.HareketVM
@using Newtonsoft.Json
@{
    ViewBag.Title = "Dashboard";
    Layout = "~/Views/Shared/AdminLayout.cshtml";

}

<div class="content-wrapper">
    <div class="page-header">
        <h3 class="page-title">Dashboard</h3>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/Admin/Anasayfa">İstatistikler</a></li>
                <li class="breadcrumb-item active" aria-current="page">Dashboard</li>
            </ol>
        </nav>
    </div>
    <div class="row">
        <div class="col-lg-6 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">Raporlar</h4>
                    <canvas id="lineChart" style="height: 229px; display: block; width: 459px;" width="516" height="257" class="chartjs-render-monitor"></canvas>
                </div>
            </div>
        </div>
        <div class="col-lg-6 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">Çalışan Sayısı</h4>
                    <canvas id="barChart" style="height:230px"></canvas>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-6 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">Aylık Hasta Sayısı</h4>
                    <canvas id="areaChart" style="height:250px"></canvas>
                </div>
            </div>
        </div>
        <div class="col-lg-6 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">Yorumlar-Şikayet ve Öneriler</h4>
                    <canvas id="doughnutChart" style="height:250px"></canvas>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-6 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">Kullanıcı Sayısı</h4>
                    <canvas id="pieChart" style="height:250px"></canvas>
                </div>
            </div>
        </div>
        
    </div>
</div>

<!-- Add the scripts at the bottom of your HTML document -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
   // Razor ile server-side veri alma
    const kanCount = @Model.kans.Count;
    const idrarCount = @Model.ıdrars.Count;  // Eğer farklı bir veri seti varsa
    const radyolojiCount = @Model.radyolojis.Count;  // Eğer farklı bir veri seti varsa

    // Chart.js ile chart oluşturma
    const lineCtx = document.getElementById('lineChart').getContext('2d');
    new Chart(lineCtx, {
        type: 'line',
        data: {
            labels: ['Kan', 'Idrar', 'Radyoloji'],
            datasets: [{
                label: 'Rapor Sayısı',
                data: [kanCount, idrarCount, radyolojiCount],  // Doğru veri seti yerleştirilmesi
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });

 // Razor verilerini JavaScript'e aktar





  const yorumCount = @Model.yorums.Count;
  const messageCount = @Model.messages.Count;  // Eğer farklı bir veri seti varsa

    const doughnutCtx = document.getElementById('doughnutChart').getContext('2d');
    new Chart(doughnutCtx, {
        type: 'doughnut',
        data: {
            labels: ['Yorum',"Şikayet ve Öneri"],
            datasets: [{
                label: 'Sayı',
                data: [yorumCount,messageCount],
                backgroundColor: ['#81b29a', '#3d405b'],
                hoverOffset: 4
            }]
        }
    });

  const personelCount = @Model.personels.Count;
const doktorCount = @Model.doktors.Count;
const adminCount = @Model.admins.Count;
const hastaCount = @Model.Hastas.Count;

const pieCtx = document.getElementById('pieChart').getContext('2d');
new Chart(pieCtx, {
    type: 'pie',
    data: {
        labels: ['personel', 'doktor', 'hasta', 'admin'],
        datasets: [{
            label: 'Pie Dataset',
            data: [personelCount, doktorCount, hastaCount, adminCount],
            backgroundColor: ['#FAAE7B', '#CC8B79', '#9F6976', '#714674'],
            hoverOffset: 4
        }]
    }
});


    const barCtx = document.getElementById('barChart').getContext('2d');
    new Chart(barCtx, {
        type: 'bar',
        data: {
            labels: ['Doktor', 'Personel', 'Admin'],
            datasets: [{
                label: 'Kontenjan',
                data: [doktorCount, personelCount, adminCount],
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });


   // Razor verilerini JavaScript'e aktar

    // Razor verilerini JavaScript'e aktar
        const monthlyPatientCount = @Html.Raw(JsonConvert.SerializeObject(Model.MonthlyPatientCount));

        const areaCtx = document.getElementById('areaChart').getContext('2d');
        new Chart(areaCtx, {
            type: 'line',
            data: {
                labels: ['January', 'February', 'March', 'April', 'May', 'June'],
                datasets: [{
                    label: 'Monthly Patient Count',
                    data: monthlyPatientCount,
                    fill: true,
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

   
</script>
